<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastcampus.comicbookrental.repository.RentalMapper">
    <select id="count" resultType="int">
        <include refid="selectCountFromRental"></include>
    </select>

    <delete id="deleteAll">
        DELETE FROM rental
    </delete>

    <delete id="delete" parameterType="RentalDTO">
        DELETE FROM rental WHERE rno = #{rno} and id=#{id}
    </delete>

    <delete id="deleteForAdmin" parameterType="RentalDTO">
        DELETE FROM rental WHERE rno = #{rno}
    </delete>

    <insert id="insert" parameterType="RentalDTO">
        INSERT INTO rental
            (cno, due_date, id, rental_date)
        VALUES
            (#{cno}, #{due_date}, #{id}, #{rental_date})
    </insert>

    <select id="selectAll" resultType="RentalDTO">
        <include refid="selectFromRental"/>
        ORDER BY rental_date DESC, rno DESC
    </select>

    <sql id="selectFromRental">
        SELECT rno, due_date, cno, id, rental_date
        FROM rental
    </sql>
    <sql id="selectCountFromRental">
        SELECT count(*)
        FROM rental
    </sql>

    <select id="select" parameterType="int" resultType="RentalDTO">
        <include refid="selectFromRental"/>
        WHERE rno = #{rno}
    </select>



    <select id="selectPage" parameterType="map" resultType="RentalDTO">
        <include refid="selectFromRental"/>
        ORDER BY rental_date DESC, rno DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <update id="update" parameterType="RentalDTO">
        UPDATE rental
        SET   due_date=#{due_date}
        WHERE rno = #{rno}
    </update>


<sql id="searchCondition">
    <choose>
        <when test='option=="T"'>
            and title like concat('%', #{keyword}, '%')
        </when>
        <when test='option=="W"'>
            and writer like concat('%', #{keyword}, '%')
        </when>
        <otherwise>
            and title like concat('%', #{keyword}, '%')
            OR writer like concat('%', #{keyword}, '%')
        </otherwise>
    </choose>
</sql>
    <!-- 검색 기능 추가-->
    <!-- 파라미터 타입을 SearchCondition 객체로 받아서 옵션을 넣는다.-->
<!--    SearchCondition을 패키지명 없이 사용하기 위해 config에서 별명 추가-->
    <select id="searchSelectPage" parameterType="SearchCondition" resultType="RentalDTO">
        <include refid="selectFromRental"/>
        where true
        <include refid="searchCondition"></include>
        ORDER BY rental_date DESC, rno DESC
        LIMIT #{offset}, #{pageSize}
    </select>
<!--페이징을 하기위해 검색 결과 개수 구하기-->
    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
    <include refid="selectCountFromRental"></include>
        WHERE true
        <include refid="searchCondition"></include>
    </select>

    <!-- 동적쿼리는 직접 작성하기 전에 미리 조건식에 해당하는 식들을 테스트 해본다음에 동적쿼리를 추가하는 방식으로 작성한다.-->

    <!--    대여할 때 히스토리에 추가-->
    <insert id="insertRentalHistory" parameterType="RentalDTO">
        INSERT INTO rentalhistory
            (rno, cno, id, rental_date, return_date)
        VALUES
            (#{rno}, #{cno}, #{id}, #{rental_date}, null)
    </insert>
    <!--    반납할 때 히스토리에 업데이트-->
    <insert id="updateRentalHistory" parameterType="RentalDTO">
        UPDATE rentalhistory
        SET  return_date= now()
        WHERE rno = #{rno} and id=#{id}
    </insert>
    
    <select id="selectAllWithId" resultType="RentalDTO" parameterType="String">
        <include refid="selectFromRental"/>
--         ORDER BY rental_date DESC, rno DESC
        WHERE id=#{id}
    </select>

</mapper>
