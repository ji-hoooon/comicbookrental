<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastcampus.comicbookrental.repository.ComicbookMapper">
    <select id="count" resultType="int">
        <include refid="selectCountFromComicbook"></include>
    </select>

    <delete id="deleteAll">
        DELETE FROM comicbook
    </delete>

    <delete id="delete" parameterType="int">
        DELETE FROM comicbook WHERE cno = #{cno}
    </delete>

    <delete id="deleteForAdmin" parameterType="map">
        DELETE FROM comicbook WHERE cno = #{cno}
    </delete>

    <insert id="insert" parameterType="ComicbookDto">
        INSERT INTO comicbook
            (title, publisher, writer)
        VALUES
            (#{title}, #{publisher}, #{writer})
    </insert>

    <insert id="insertWithQuantity" parameterType="ComicbookDto">
        INSERT INTO comicbook
            (title, publisher, writer, quantity)
        VALUES
            (#{title}, #{publisher}, #{writer}, #{quantity})
    </insert>

    <select id="selectAll" resultType="ComicbookDto">
        SELECT cno, title, publisher, writer, quantity,view_cnt, reg_date
        FROM comicbook
        ORDER BY reg_date DESC, cno DESC
    </select>

    <sql id="selectFromComicbook">
        SELECT cno, title, publisher, writer, view_cnt, reg_date
        FROM comicbook
    </sql>
    <sql id="selectCountFromComicbook">
        SELECT count(*)
        FROM comicbook
    </sql>

    <select id="select" parameterType="int" resultType="ComicbookDto">
        <include refid="selectFromComicbook"/>
        WHERE cno = #{cno}
    </select>

    <select id="selectPage" parameterType="map" resultType="ComicbookDto">
        <include refid="selectFromComicbook"/>
        ORDER BY reg_date DESC, cno DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <update id="update" parameterType="ComicbookDto">
        UPDATE comicbook
        SET   title = #{title}
          , writer = #{writer}
          , publisher = #{publisher}
          , up_date = now()
        WHERE cno = #{cno}
    </update>


    <update id="increaseViewCnt" parameterType="int">
        UPDATE comicbook
        SET   view_cnt = view_cnt + 1
        WHERE cno = #{cno}
    </update>
<sql id="searchCondition">
    <choose>
        <when test='option=="T"'>
            and title like concat('%', #{keyword}, '%')
        </when>
        <when test='option=="W"'>
            and writer like concat('%', #{keyword}, '%')
        </when>
        <otherwise>
            and title like concat('%', #{keyword}, '%')
            OR writer like concat('%', #{keyword}, '%')
        </otherwise>
    </choose>
</sql>
    <!-- 검색 기능 추가-->
    <!-- 파라미터 타입을 SearchCondition 객체로 받아서 옵션을 넣는다.-->
<!--    SearchCondition을 패키지명 없이 사용하기 위해 config에서 별명 추가-->
    <select id="searchSelectPage" parameterType="SearchCondition" resultType="ComicbookDto">
        <include refid="selectFromComicbook"/>
        where true
        <include refid="searchCondition"></include>
        ORDER BY reg_date DESC, cno DESC
        LIMIT #{offset}, #{pageSize}
    </select>
<!--페이징을 하기위해 검색 결과 개수 구하기-->
    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
    <include refid="selectCountFromComicbook"></include>
        WHERE true
        <include refid="searchCondition"></include>
    </select>

    <!-- 동적쿼리는 직접 작성하기 전에 미리 조건식에 해당하는 식들을 테스트 해본다음에 동적쿼리를 추가하는 방식으로 작성한다.-->



</mapper>
